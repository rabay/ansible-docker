---
# tasks file for docker-overlay2
# READ MORE: https://docs.docker.com/storage/storagedriver/overlayfs-driver/

- block: #initial block

  - name: if Docker running, stop the service
    systemd:
      name: docker
      state: stopped
    changed_when: false

  - name: check if physical volume exists
    command: pvdisplay
    register: var_pvs
    changed_when: false

  - block: #physical volume block
    - name: create the physical volume
      command: pvcreate "{{lvmDisk}}"

    - name: create the volume group
      lvg:
        vg: "{{lvmGroup}}"
        pvs: "{{lvmDisk}}"
        state: present

    - name: check if logical volume exists
      command: lvdisplay
      changed_when: false
      register: var_lvs
    
    # - debug: var=var_lvs.stdout

    - block: #logical volume block
      - name: create the logical volume
        lvol:
          vg: "{{lvmGroup}}"
          lv: "{{lvmVolume}}"
          size: 100%VG
          state: present

      - name: Ensure monitoring of the logical volume is enabled.
        command: lvchange --monitor y "{{lvmGroup}}/{{lvmVolume}}"

      - name: create a xfs filesystem
        filesystem:
          fstype: "{{dkr_storagefs}}"
          dev: "/dev/mapper/{{lvmGroup}}-{{lvmVolume}}"

      - name: list all mounted points in system
        command: mount
        args:
          warn: false
        register: mounted_points
        changed_when: false

      # - debug: var=mounted_points

      - name: check if dir is already a mount point
        fail:
          msg: "'lvmMountPoint' is already used as a mount point."
        when: "'lvmMountPoint' in mounted_points.stdout"

      - name: mount the filesystem
        mount:
          path: "{{lvmMountPoint}}"
          src: "/dev/mapper/{{lvmGroup}}-{{lvmVolume}}"
          fstype: "{{dkr_storagefs}}"
          opts: defaults
          state: mounted

      - name: verify if Docker dir exists
        stat: path=/var/lib/docker
        register: var_docker_dir

      - name: check if Docker directory has files
        find: paths=/var/lib/docker file_type=directory patterns="*"
        register: var_docker_dir_files

      - name: delete all Docker directory contents
        file: 
          path: "{{ item.path }}"
          state: absent
        with_items:
          - "{{ var_docker_dir_files.files }}"

      when: "lvmVolume not in var_lvs.stdout" #logical volume block

    # - name: fail if logical volume alredy exists
    #   fail:
    #     msg: "The logical volume {{lvmVolume}} already exists."
    #   when: "lvmVolume in var_lvs.stdout"

    when: "lvmDisk not in var_pvs.stdout" #physical volume block

  # - name: fail if physical volume alredy exists
  #   fail:
  #     msg: "The physical volume {{lvmDisk}} already exists."
  #   when: "lvmDisk in var_pvs.stdout"

  tags: #initial block
    - docker_storage